// üîç EXEMPLO 3: Valida√ß√£o de Sal√°rio e N√∫meros
// ============================================

console.log("=== VALIDA√á√ÉO DE SAL√ÅRIO ===\n");

const formularios = [
  { salario: "5.500,50" }, // formato brasileiro
  { salario: "2500.75" }, // formato americano
  { salario: "abc" }, // inv√°lido
  { salario: "1000" }, // abaixo do m√≠nimo
  { salario: "15.000,00" }, // formato brasileiro com milhares
];

formularios.forEach((form, index) => {
  console.log(`\n--- Formul√°rio ${index + 1}: "${form.salario}" ---`);

  // VALIDA√á√ÉO DE SAL√ÅRIO (numbers + format brasileiro)
  let salarioValido = false;
  let salarioErro = "";

  // Converter formato brasileiro para americano
  const salarioLimpo = form.salario
    .replace(/\./g, "") // Remove pontos (milhares)
    .replace(",", "."); // Troca v√≠rgula por ponto (decimais)

  const salarioNumero = Number(salarioLimpo);

  if (form.salario.trim() === "") {
    salarioErro = "Sal√°rio √© obrigat√≥rio";
  } else if (Number.isNaN(salarioNumero)) {
    salarioErro = "Sal√°rio deve ser um n√∫mero v√°lido";
  } else if (salarioNumero < 0) {
    salarioErro = "Sal√°rio n√£o pode ser negativo";
  } else if (salarioNumero < 1320) {
    // Sal√°rio m√≠nimo 2024
    salarioErro = "Sal√°rio abaixo do m√≠nimo";
  } else if (salarioNumero > 100000) {
    salarioErro = "Sal√°rio muito alto para valida√ß√£o";
  } else {
    salarioValido = true;
  }

  const salarioFormatado = salarioValido
    ? `R$ ${salarioNumero.toLocaleString("pt-BR", {
        minimumFractionDigits: 2,
      })}`
    : form.salario;

  console.log(`  Original: "${form.salario}"`);
  console.log(`  Limpo: "${salarioLimpo}"`);
  console.log(`  Convertido: ${salarioNumero}`);
  console.log(`  Formatado: "${salarioFormatado}"`);
  console.log(
    `  V√°lido: ${salarioValido ? "‚úÖ" : "‚ùå"} ${
      salarioValido ? "" : salarioErro
    }`
  );
});

console.log("\n=== VALIDA√á√ÉO DE IDADE E N√öMEROS ===");

const idades = ["25", "17", "abc", "-5", "150", "25.5"];

idades.forEach((idadeStr) => {
  console.log(`\n--- Idade: "${idadeStr}" ---`);

  let idadeValida = false;
  let idadeErro = "";

  // Converter string para number
  const idadeNumero = Number(idadeStr);

  if (idadeStr.trim() === "") {
    idadeErro = "Idade √© obrigat√≥ria";
  } else if (Number.isNaN(idadeNumero)) {
    idadeErro = "Idade deve ser um n√∫mero";
  } else if (!Number.isInteger(idadeNumero)) {
    idadeErro = "Idade deve ser um n√∫mero inteiro";
  } else if (idadeNumero < 0) {
    idadeErro = "Idade n√£o pode ser negativa";
  } else if (idadeNumero < 18) {
    idadeErro = "Idade m√≠nima √© 18 anos";
  } else if (idadeNumero > 120) {
    idadeErro = "Idade m√°xima √© 120 anos";
  } else {
    idadeValida = true;
  }

  console.log(`  String: "${idadeStr}"`);
  console.log(`  N√∫mero: ${idadeNumero}`);
  console.log(`  Tipo: ${typeof idadeNumero}`);
  console.log(`  √â inteiro: ${Number.isInteger(idadeNumero)}`);
  console.log(`  √â NaN: ${Number.isNaN(idadeNumero)}`);
  console.log(
    `  V√°lida: ${idadeValida ? "‚úÖ" : "‚ùå"} ${idadeValida ? "" : idadeErro}`
  );
});

console.log("\n=== CONVERTER DIFERENTES FORMATOS ===");

const valoresMonetarios = [
  "1.234,56", // brasileiro
  "1234.56", // americano
  "1,234.56", // americano com milhares
  "R$ 1.500,00", // brasileiro com s√≠mbolo
  "$1,500.00", // americano com s√≠mbolo
  "1.500", // amb√≠guo
  "abc,def", // inv√°lido
];

valoresMonetarios.forEach((valor) => {
  console.log(`\n"${valor}":`);

  // Tentar formato brasileiro primeiro
  let numeroLimpo = valor
    .replace(/[R$\s]/g, "") // Remove R, $, espa√ßos
    .replace(/\./g, "") // Remove pontos (milhares)
    .replace(",", "."); // V√≠rgula vira ponto

  let numero = Number(numeroLimpo);

  // Se n√£o funcionou, tentar formato americano
  if (Number.isNaN(numero)) {
    numeroLimpo = valor
      .replace(/[$R\s]/g, "") // Remove s√≠mbolos
      .replace(/,(?=\d{3})/g, ""); // Remove v√≠rgulas de milhares
    numero = Number(numeroLimpo);
  }

  if (Number.isNaN(numero)) {
    console.log("  ‚ùå N√£o foi poss√≠vel converter");
  } else {
    console.log(`  ‚úÖ Convertido: ${numero}`);
    console.log(`  üí∞ Formatado: R$ ${numero.toFixed(2)}`);
  }
});
